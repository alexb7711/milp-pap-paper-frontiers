version: '3'

################################################################################
# ENVIRONTMENT
################################################################################
vars:
  TARGET : a-position-allocation-approach-to-the-scheduling-of-beb-charging.pdf
  IMG_DIR: ./img
  DOC    : main
  SCRIPTS: org-doc-scripts


################################################################################
# RECIPES
################################################################################

##==============================================================================
#
tasks:
  default:
    cmds:
      - task: precheck
      - task: images
      - task: pdf

##==============================================================================
#
  pipeline:
    cmds:
      - task: precheck
      - task: images
      - task: set-version
      - task: pdf

##==============================================================================
#
  min:
    cmds:
      - task: images
      - task: eps-to-pdf

##==============================================================================
#
  precheck:
    desc: "Make sure that all the dependencies are installed."
    cmds:
      - sh {{.SCRIPTS}}/check-packages
      - |
          epspdf -v>/dev/null 2>&1 || ep2pdf -v>/dev/null 2>&1 && \
          echo "EPS converter installed!" || echo "Warning: no EPS converter installed"
    silent: true

##==============================================================================
#
  images:
    desc: "Creates a PDF of all the files in {{.IMGDIR}}."
    sources:
      - ./img/*.tex
    generates:
      - ./img/*.pdf
    vars:
      IMG_SRC:
        sh: ls {{.IMG_DIR}} | grep ".tex$"
    cmds:
      - |
        for i in {{.IMG_SRC | catLines}}
        do
          pdflatex -shell-escape -interaction=nonstopmode -output-directory {{.IMG_DIR}} ${i}
        done
    silent: true

##==============================================================================
# Resources:
# - https://stackoverflow.com/questions/15559359/insert-line-after-match-using-sed
#
  set-version:
    desc: "Dynamically sets the version of the document."
    vars:
      ABSTRACT: sections/abstract.tex
      VERSION:
        sh: git describe --tags
    cmds:
      - |
        grep {{.VERSION}} {{.ABSTRACT}} > /dev/null || \
        sed -i 's/\\begin{abstract}/\\begin{abstract}\nVERSION: \\today:{{.VERSION}}\n/' {{.ABSTRACT}}
    silent: true

##==============================================================================
#
  relative-path-bibtex:
    desc: "Update the paths in the 'bibtex' command to be relative."
    cmds:
      - sh {{.SCRIPTS}}/relative-path-bibtex {{.DOC}}.tex

##==============================================================================
#
  eps-to-pdf:
    desc: "Convert EPS to PDF files required for this paper."
    cmds:
      - |
        epspdf -v>/dev/null 2>&1 && epspdf logo1.eps || eps2pdf logo1.eps
        mv logo1.pdf logo1-eps-converted-to.pdf
    silent: true

##==============================================================================
#
  pdf:
    desc: "Output {{.TARGET}} PDF."
    cmds:
      - task: relative-path-bibtex
      - task: eps-to-pdf
      - sh {{.SCRIPTS}}/build-pdf {{.DOC}} {{.TARGET}}
    silent: true

##==============================================================================
#
  clean:
    desc: "Clean up the project."
    vars:
      DOC_SRC: main.tex
    cmds:
      - |
        for f in $(find {{.IMG_DIR}} -maxdepth 1 -type f)
        do
          [ ${f##*.} != "tex" ] && rm -f ${f}
        done
        rm -f {{.TARGET}}
        latexmk -silent -C {{.DOC_SRC}}
    silent: true
