* The Position Allocation Problem
:PROPERTIES:
:custom_id: sec:the-position-allocation-problem
:END:

This section provides a brief overview of the BAP and a detailed formulation of PAP as presented in
[cite:@qarebagh-2019-optim-sched].

** Overview of BAP
:PROPERTIES:
:custom_id: sec:overview-of-bap
:END:

The BAP is a rectangle packing problem where a set of rectangles, $\mathbb{O}$, are attempted to be optimally placed in
a larger rectangle, $O$, as shown in \autoref{fig:packexample}. The rectangle packing problem is an NP-hard problem that
can be used to describe many real life problems [cite:@bruin-2013-rectan-packin;@murata-1995-rectan]. In some of these
problems, the dimensions of $\mathbb{O}$ are held constant such as in the problem of packing modules on a chip, where
the widths and height of the rectangles represent the physical width and heights of the modules
\cite{murata-1995-rectan}. Other problems, such as the BAP can allow one side of the rectangle to vary depending on its
assigned position (e.g. the varying lengths of the vessels) [cite:@buhrkal-2011-model-discr].

The BAP solves the problem of optimally assigning incoming vessels to berth positions to be serviced as shown in
 \autoref{subfig:bapexample}. To relate to the rectangle packing problem, the width and height of $O$ represent the time
 horizon $T$ and the berth length $S$, respectively. Similarly, the width and height for $\mathbb{O}$ represent the time
 spent to service vessel $i$ and the space taken by docking vessel $i$, respectively. In the BAP, the vessel
 characteristics (length of the vessel, arrival time, handling time, desired departure time) are assumed to be known for
 all vessels to be serviced. A representation of a BAP solution is shown in \autoref{fig:bap}. The x and y-axis
 represent time and space, respectively. The grey squares, labeled A, B, C, and D, represent berthed vessels. The width
 of the boxes represent the time spent being serviced, and the height represents the amount of space the vessel requires
 on the berth. The vertical line adjacent ``Arrival Time'' represents the actual time that the vessel arrives and is
 available to be berthed. ``Berthing Time'' is the time the vessel is berthed and begins being serviced. ``Completion
 time'' represents the time at which the berthing space becomes available again.

** The PAP Formulation
:PROPERTIES:
:custom_id: sec:the-pap-formulation
:END:

The BAP forms the basis of the PAP; however, there are some differences in the way the variables are interpreted. For
the $i^{th}$ visit, starting service time, $u_i$, is the starting charge time, the berth location, $v_i$, is the charger
queue for assignment, and the service time, $s_i$, is the elapsed charge time. There are also a few clarifying concepts
about how the system is modeled. The PAP models the set of chargers as one continuous line; that is, the natural
behavior of the PAP model is to allow vehicles to be queued anywhere along $[0,S]$. Similarly, the charge times are
continuous and can be placed anywhere on the time horizon, $[0,T]$, as long as the allocated times do not interfere with
other scheduled charge times. The PAP formulation's parameters can be divided into two categories: input parameters and
decision variables. Each type will now be introduced. The following parameters are constant inputs into the MILP.

#+begin_src latex
\begin{itemize}
	\item $L$   : Size of the vehicle
	\item $T$   : time horizon
	\item $n_V$ : total number of incoming vehicles
	\item $s_i$ : charging time for vehicle $i;\; 1 \leq i \leq n_N$
	\item $l_i$ : width of vehicle $i;\; 1 \leq i \leq n_N$
	\item $a_i$ : arrival time of vehicle $i;\; 1 \leq i \leq n_N$
\end{itemize}
#+end_src

These constants define the problem bounds. The following list provides a series of decision variables used in the
formulation.

#+begin_src latex
\begin{itemize}
    \item $u_i$    : starting charge time for vehicle $i;\; 1 \leq i \leq n_N$
    \item $v_i$    : assigned charge queue for vehicle $i;\; 1 \leq i \leq n_N$
    \item $d_i$    : departure time for vehicle $i;\; 1 \leq i \leq n_N$
    \item $\sigma_{ij}$ : determines ordering of vehicles $i$ and $j$ in time; i.e. $\sigma_{ij} = 1 \implies$ $i$ arrives before $j$
    \item $\psi_{ij}$ : determines relative position of vehicles $i$ and $j$ when charging simultaneously; i.e. $\psi_{ij} = 1 \implies$ $i$ to the left of $j$
\end{itemize}
#+end_src

To determine the values for each of these decision variables, a MILP is formulated in [cite:@qarebagh-2019-optim-sched]
and shown here for completeness.

#+begin_src latex
\begin{equation}
	\label{eq:bapobjective}
	\min\; \sum_{i=1}^N (d_i - a_i)
\end{equation}
#+end_src
Subject to:
#+begin_src latex
\begin{subequations}
\label{eq:bapconstrs}
\begin{align}
    u_j - u_i - s_i - (\sigma_{ij} - 1)T \geq 0                  \label{subeq:baptime}          \\
    v_j - v_i - l_i - (\psi_{ij} - 1)L \geq 0                \label{subeq:bapspace}           \\
    \sigma_{ij} + \sigma_{ji} + \psi_{ij} + \psi_{ji} \geq 1 \label{subeq:bapvalid_pos}     \\
    \sigma_{ij} + \sigma_{ji} \leq 1                              \label{subeq:bapsigma}        \\
    \psi_{ij} + \psi_{ji} \leq 1                              \label{subeq:bapdelta}        \\
    s_i + u_i = d_i                                               \label{subeq:bapdetach}       \\
    a_i \leq u_i \leq (T - s_i)                                   \label{subeq:bapvalid_starts} \\
    \sigma_{ij} \in \{0,1\},\;\psi_{ij} \in \{0,1\}\;           \label{subeq:bapsdspace}      \\
    v_i \in [0, L ]                                               \label{subeq:bapvspace}
\end{align}
\end{subequations}
#+end_src

\noindent

The objective function, \autoref{eq:bapobjective}, minimizes the time spent to service each vehicle by minimizing over
the sum of differences between the departure time, $d_i$, and arrival time, $a_i$. i.e., It seeks to get each vehicle
charged and on its way as quickly as possible.

\autoref{subeq:baptime}-\autoref{subeq:bapdelta} are used to ensure that individual rectangles do not overlap. For the
PAP, they ensure that two vehicles charging simultaneously are at different positions and, similarly, two vehicles that
have overlapping positions do not overlap temporally. \autoref{subeq:baptime} establishes temporal ordering when active
($\sigma_{ij}=1$). Similarly, when $\psi_{ij} =1$ in \autoref{subeq:bapspace} then spatial ordering is established. Constraints
\autoref{subeq:bapvalid_pos}-\autoref{subeq:bapdelta} enforce that spatial and/or temporal ordering is established
between each possible queue/vehicle pair. Constraints \autoref{subeq:bapsigma} and \autoref{subeq:bapdelta} enforce
consistency. For example, \autoref{subeq:bapsigma} enforces that vehicle $i$ cannot come before vehicle $j$ and vehicle
$j$ simultaneously come before vehicle $i$.

The last constraints force relationships between arrival time, charge start time, and departure time.
\autoref{subeq:bapdetach} states that the service start time, $u_i$, plus the time to service vehicle $i$, $s_i$, must
equal the departure time, $d_i$. \autoref{subeq:bapvalid_starts} enforces the arrival time, $a_i$, to be less than or
equal to the service start time, $u_i$, which in turn must be less than or equal to the latest time the vehicle may
begin to be serviced to stay within the time horizon. \autoref{subeq:bapsdspace} ensures that $\sigma_{ij}$ and
$\psi_{ij}$ are binary. \autoref{subeq:bapvspace} ensures that the assigned value of $v_i$ is a valid charging position.

#  LocalWords:  MILP
