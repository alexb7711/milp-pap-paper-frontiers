* The Position Allocation Problem
:PROPERTIES:
:custom_id: sec:the-position-allocation-problem
:END:

This section provides a brief overview of the BAP and a detailed formulation of PAP as presented in
[cite:@qarebagh-2019-optim-sched].

** Overview of BAP
:PROPERTIES:
:custom_id: sec:overview-of-bap
:END:

The BAP is a rectangle packing problem where a set of rectangles, $\mathbb{O}$, are attempted to be optimally placed in
a larger rectangle, $O$, as shown in \autoref{fig:packexample}. The rectangle packing problem is an NP-hard problem that
can be used to describe many real-life problems [cite:@bruin-2013-rectan-packin;@murata-1995-rectan]. In some of these
problems, the dimensions of $\mathbb{O}$ are held constant such as in the problem of packing modules on a chip, where
the widths and height of the rectangles represent the physical width and heights of the modules
\cite{murata-1995-rectan}. Other problems, such as the one presented in this work, allow either the horizontal or
vertical edge of each rectangle in $\mathbb{O}$ to vary. As an example, suppose the vessel lengths are predefined
(vertical edges are static), but the service time is allowed to vary (horizontal edges are dynamic).
[cite:@buhrkal-2011-model-discr].

The BAP solves the problem of optimally assigning incoming vessels to berth positions to be serviced as shown in
\autoref{subfig:bapexample}. To relate to the rectangle packing problem, the width and height of $O$ represent the time
horizon $\T$ seconds and the berth length $L$ meters, respectively. Similarly, the widths and heights of each element in
$\mathbb{O}$ represent the time spent to service vessel $i$ and the space taken by docking vessel $i$, respectively. In
the BAP, the vessel characteristics (length of the vessel, arrival time, handling time, desired departure time) are
assumed to be known for all vessels. A representation of a BAP solution is shown in \autoref{fig:bap}. The x and y-axis
represent time horizon and berthing space, respectively. The gray squares, labeled A, B, C, and D, represent berthed
vessels. The width of the boxes represents the time spent being serviced, and the height represents the amount of space
the vessel requires on the berth. The vertical line adjacent to ``Arrival Time'' represents the actual time that the
vessel arrives and is available to be berthed. ``Berthing Time'' is the time the vessel is berthed and begins being
serviced. ``Completion time'' represents the time at which the berthing space becomes available again.

** The PAP Formulation
:PROPERTIES:
:custom_id: sec:the-pap-formulation
:END:

The BAP forms the basis of the PAP; however, there are some differences in the way the variables are interpreted. The
starting service time, $u_i$ seconds, is viewed as the initial charge time, and the service time, total elapsed time
spent on the charger. Similarly, for the spatial term, $v_i \in [0,L]$, the berth location is instead interpreted as the
initial position on the charger. There are also a few clarifying concepts about how the system is modeled. The PAP
models the set of chargers as one continuous line; that is, the natural behavior of the PAP model is to allow vehicles
to be queued anywhere along $[0,L]$. Similarly, the charge times are continuous and can be placed anywhere on the time
horizon, $[0,\T]$, as long as the allocated times do not interfere with other scheduled charge times.

The PAP formulation's parameters can be divided into two categories: input parameters and decision variables. Each type
will now be introduced in turn. The following parameters are assumed to be known inputs for the MILP. $L$ defines the
length of the charger in meters. As stated previously, it is modeled as a continuous bar meaninng that a vehicle can be
placed anywhere in the range $[0,L]$. It is assumed that the time horizon, $T$ seconds, is known so that vehicles may be
placed temporarily in the range $[0,T]$. The total number of visits to the station over the time horizon is represented
by $n_V$. The arrival time for each visit is represented by $a_i$ seconds, and the required charge time is represented
by $s_i$ seconds. The width of vehicle $i$ is represented by $l_i$ meters.

The decision variables provide the means by which the solver may optimize the problem. The initial and final charge
times for vehicle $i$ are $u_i$ and $d_i$ seconds, respectively. The starting position on the charger is denoted as $v_i
\in [0,L]$ meters. The temporal ordering of vehicles $i$ and $j$ is determined by $\sigma_{ij} \in \{0, 1\}$, where $\sigma_{ij} = 1
\implies$ $i$ arrives before $j$ for all $1 \le i,j \le n_V$. Similarly, $\psi_{ij} \in \{0, 1\}$ determines the relative
position of vehicles $i$ and $j$ on the charger: $\psi_{ij} = 1 \implies v_i < v_j$ for all $1 \le i,j \le n_V$.

To determine the values for each of these decision variables, a MILP was formulated in
[cite:@qarebagh-2019-optim-sched]. The formulation is shown in its entirety for completeness.
The problem to be solved is

#+begin_src latex
\begin{equation}
	\label{eq:bapobjective}
	\min\; \sum_{i=1}^N (d_i - a_i)
\end{equation}
#+end_src
Subject to:
#+begin_src latex
  \begin{subequations}
  \label{eq:bapconstrs}
  \begin{align}
      u_j - u_i - s_i - (\sigma_{ij} - 1)\T \geq 0   \label{subeq:baptime}          \\
      v_j - v_i - l_i - (\psi_{ij} - 1)L \geq 0   \label{subeq:bapspace}           \\
      \sigma_{ij} + \sigma_{ji} + \psi_{ij} + \psi_{ji} \geq 1 \label{subeq:bapvalid_pos}     \\
      \sigma_{ij} + \sigma_{ji} \leq 1                   \label{subeq:bapsigma}        \\
      \psi_{ij} + \psi_{ji} \leq 1                   \label{subeq:bapdelta}        \\
      s_i + u_i = d_i                       \label{subeq:bapdetach}       \\
      a_i \leq u_i \leq (T - s_i)                 \label{subeq:bapvalid_starts} \\
      \sigma_{ij} \in \{0,1\},\;\psi_{ij} \in \{0,1\}\; \label{subeq:bapsdspace}      \\
      v_i \in [0, L ]                         \label{subeq:bapvspace}
  \end{align}
  \end{subequations}
#+end_src

\noindent The objective function, \autoref{eq:bapobjective}, minimizes the idle and service time by summing over the
differences between the departure time, $d_i$, and arrival time, $a_i$ for all visits. In other words, the objective
function is searching for the schedule that removes each vehicle from the service queue as quickly as possible.

\autoref{subeq:baptime}-\autoref{subeq:bapdelta} are used to ensure that individual rectangles do not overlap. In terms
of the PAP, this implies that there are no conflicts in the schedule spatially or temporally. \autoref{subeq:baptime}
establishes temporal ordering when active ($\sigma_{ij}=1$) in the manner described previously by utilizing big-M notation.
Similarly, \autoref{subeq:bapspace} establishes spatial ordering when active ($\psi_{ij} =1$). Constraints
\autoref{subeq:bapvalid_pos}-\autoref{subeq:bapdelta} enforce spatial and temporal ordering between each queue/vehicle
pair. Constraints \autoref{subeq:bapsigma} and \autoref{subeq:bapdelta} enforce validity of the assignments. For
example, if \autoref{subeq:bapsigma} resulted in a value of two, that would imply both vehicle $i$ and $j$ are scheduled
before and after each other temporally, which is impossible. In the case of {\autoref{subeq:bapdelta}} being equal to
two, that would mean that vehicles $i$ and $j$ are scheduled both before and after one another on the charging strip,
which is again impossible.}}

The last constraints force relationships between arrival time, initial charge time, and departure time.
\autoref{subeq:bapdetach} states that the initial charge time, $u_i$, plus the total charge time for, $s_i$, must equal
the departure time, $d_i$. \autoref{subeq:bapvalid_starts} enforces the arrival time, $a_i$, to be less than or equal to
the service start time, $u_i$, which in turn must be less than or equal to the latest time the vehicle may begin
charging and stay within the time horizon. \autoref{subeq:bapsdspace} simply states that $\sigma_{ij}$ and $\psi_{ij}$ are
binary terms. \autoref{subeq:bapvspace} ensures that the assigned value of $v_i$ is within the range, $[0,L]$.

#  LocalWords: MILP
